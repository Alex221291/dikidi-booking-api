// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Salon {
  id    String   @default(uuid()) @id @db.Uuid
  name    String
  description    String?
  dkdCompanyId    String
  tgBotId    BigInt
  tgBotName    String
  tgToken    String
  users User[]
  @@map("salons")
}

model User {
  id    String   @default(uuid()) @id @db.Uuid
  tgUserId    BigInt
  tgUserName    String?
  tgChatId    BigInt
  userId    String? @db.Uuid
  role    UserRoles
  salon    Salon?    @relation(fields: [salonId], references: [id])
  salonId  String? @db.Uuid
  @@map("users")
}

model Client {
  id    String   @default(uuid()) @id @db.Uuid
  name    String?
  phone    String?
  rewiers Review[]
  records Record[]
  @@map("clients")
}

model Staff {
  id    String   @default(uuid()) @id @db.Uuid
  dkdMasterId    String?
  rewiers Review[]
  records Record[]
  contacts StaffContact[]
  @@map("staff")
}

model Review {
  id    String   @default(uuid()) @id @db.Uuid
  name    String?
  description    String?
  date    DateTime @default(now()) @db.Date
  score    Int?
  client    Client?    @relation(fields: [clientId], references: [id])
  clientId  String? @db.Uuid
  staff    Staff?    @relation(fields: [staffId], references: [id])
  staffId  String? @db.Uuid
  @@map("reviews")
}

model Record {
  id    String   @default(uuid()) @id @db.Uuid
  dkdRecordId    String?
  client    Client?    @relation(fields: [clientId], references: [id])
  clientId  String? @db.Uuid
  staff    Staff?    @relation(fields: [staffId], references: [id])
  staffId  String? @db.Uuid
  @@map("records")
}

model StaffContact {
  id    String   @default(uuid()) @id @db.Uuid
  type    ContactTypes
  value   String?
  staff    Staff?    @relation(fields: [staffId], references: [id])
  staffId  String? @db.Uuid
  @@map("staff_contacts")
}

enum UserRoles {
  DIRECTOR
  ADMINISTRATOR
  MASTER
  CLIENT
  ADMIN
  SUPERADMIN
  USER
}

enum ContactTypes {
  TELEGRAM
  VIBER
  WHATSAPP
  INSTAGRAM
  VK  
}
